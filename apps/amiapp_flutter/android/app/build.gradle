plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"  // Google Services plugin
}

android {
    compileSdkVersion 33
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // `copyFlutterAssetsRelease` task is responsible for copying the app's assets from the
    // Flutter project to the Android project's assets directory.
    // The `compressReleaseAssets` task, is responsible for compressing the assets into a single archive file for release builds.
    // By adding a dependency on `copyFlutterAssetsRelease`, the code ensures that the app's assets
    // are copied to the correct location before they are compressed for release.
    tasks.whenTaskAdded { task ->
        if (task.name == 'compressReleaseAssets') {
            task.dependsOn 'copyFlutterAssetsRelease'
        }
    }

    defaultConfig {
        applicationId "io.customer.amiapp_flutter"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled true
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.7.21"
    // Adding customer.io android sdk dependencies so we can use them in native code
    // These are not generally needed and should be avoided
    implementation "io.customer.android:tracking"
    implementation "io.customer.android:messaging-push-fcm"
    implementation "io.customer.android:messaging-in-app"
}
