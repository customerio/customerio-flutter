name: Build sample apps

on:
  pull_request: # build sample apps for every commit pushed to an open pull request (including drafts)
  push:
    branches: [ main, feature/* ]

concurrency: # cancel previous workflow run if one exists.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  XCODE_VERSION: "15.3"

jobs:
  update-pr-comment:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # to be able to comment on PR
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id }}
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@3eae4d37986fb5a8592848f6a574fdf654e61f9e # v3.1.0
        id: existing-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: <!-- sample app builds -->

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        id: create-comment
        with:
          comment-id: ${{ steps.existing-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            <!-- sample app builds --> 
            # Sample app builds ðŸ“±
            
            Below you will find the list of the latest versions of the sample apps. It's recommended to always download the latest builds of the sample apps to accurately test the pull request. 
            
            ---
            ${{ steps.build.outputs.build-log }}
          edit-mode: replace # replace the existing comment with new content since we are creating new builds


  build-sample-apps:
    if: ${{ always() }} # do not skip running this step if update-pr-comment does not run
    needs: [ update-pr-comment ] # wait for PR comment to be created saying new builds are being made.
    uses: ./.github/workflows/reusable-build-sample-apps.yml
    with:
      use_latest_sdk_version: false
    secrets: inherit

  update-pr-comment-after-apps-built:
    if: always() && ${{ github.event_name == 'pull_request' }}
    needs: [ update-pr-comment, build-sample-apps ] # wait for PR comment to be created saying new builds are being made.
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # to be able to comment on PR
    steps:
      - name: Update sample builds PR comment with build information
        if: ${{ needs.build-sample-apps.result == 'success' }}
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          # the variables APP_VERSION_NAME, APP_VERSION_CODE are created when fastlane runs "build".
          body: |
            * amiapp_flutter: `${{ needs.build-sample-apps.outputs.APP_VERSION_NAME }} (${{ needs.build-sample-apps.outputs.APP_VERSION_CODE }})`
          edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds.

      - name: Update sample builds PR comment with build failure message
        if: ${{ needs.build-sample-apps.result == 'failure' }}
        uses: peter-evans/create-or-update-comment@71345be0265236311c031f5c7866368bd1eff043 # v4.0.0
        with:
          comment-id: ${{ needs.update-pr-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            * amiapp_flutter: Build failed. See [CI job logs](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}) to determine the issue and try re-building.
          edit-mode: append # append new line to the existing PR comment to build a list of all sample app builds.
